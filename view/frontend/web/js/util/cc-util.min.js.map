{"version":3,"sources":["js/util/cc-util.js"],"names":["e","t","n","r","s","o","u","a","require","i","Error","f","exports","call","length","1","module","define","EBANX","formatDueDate","dueDateSplited","expiry","replace","split","title","content","attr","enableBtnPlaceOrder","$","removeAttr","errorMessage","alert","actions","always","card_number","cvv","disableBtnPlaceOrder","validation","form","validateForm","Promise","resolve","number","tokenize","card_due_date","card_cvv","reject","config","setPublishableKey","window","checkoutConfig","payment","ebanx","publicKey","country","card_name","createTokenCallback","ebanxResponse","data","status","error","err","message","status_message"],"mappings":"cAAA,SAAUA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAkB,mBAATC,SAAqBA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,MAAM,IAAIK,MAAM,uBAAuBL,EAAE,KAAK,IAAIM,EAAET,EAAEG,IAAIO,YAAYX,EAAEI,GAAG,GAAGQ,KAAKF,EAAEC,QAAQ,SAASZ,GAAG,IAAIE,EAAED,EAAEI,GAAG,GAAGL,GAAG,OAAOI,EAAEF,GAAIF,IAAIW,EAAEA,EAAEC,QAAQZ,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGO,QAAkD,IAAI,IAA1CH,EAAkB,mBAATD,SAAqBA,QAAgBH,EAAE,EAAEA,EAAEF,EAAEW,OAAOT,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAArZ,EAA0ZW,GAAG,SAASP,EAAQQ,EAAOJ,GACrbK,QADmB,SAAgB,SAAU,6BAA8I,SAAAC,EAAIP,EAAET,GAA4G,IAAAiB,EAAYP,SAAAA,GAAQ,IAAMQ,EAAgBC,EAAAC,QAAYd,KAAlC,IAA0Ce,MAAQlB,KAA2B,OAARe,EAAA,GAAA,MAAAA,EAAA,IAkB9XI,EADM,WAENC,EAAAA,+BAFMC,KAAA,WAAA,aAGGC,EAAA,WAHHC,EAAA,+BAANC,WAAA,aA8CK,OAeLV,cAAeA,EAbXD,iBAzDR,SAAAY,EAAAN,GASIO,GAPJP,MAAAA,EACIC,QAAAK,EACAE,SACAC,OAAA,iBAsDQC,SArCNP,SAAAA,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,OAAAA,EAAAA,EAAAA,OAAsBQ,EAAtBR,EAAsBQ,IAWxB,GAVAP,KALEQ,SAAAA,GACFR,OAAAA,EAAAA,GAAES,cAAAT,EAAAU,GAAFD,WAAsC,WAcjCE,CAAa,cANlB,OADJZ,IACI,IAAAa,QAAO,SAAAC,EAAQJ,GAAR,OAA0BC,GAAMD,KAG3C,IAAAH,EAAiBQ,EAAApB,QAAXqB,KAAW,IAAsCC,EAAAzB,EAAAE,GAAAwB,EAA3BxB,EAA2BC,QAA3BD,KAA2B,IAYnD,OAAO,IAAImB,QAAQ,SAACC,EAASK,GAX7BV,EAAAA,OAAAA,QAAAA,OAAAA,eAAAA,QAAAA,MAAAA,MAaIlB,EAAM6B,OAAOC,kBAAkBC,OAAOC,eAAeC,QAAQC,MAAMC,WAXvEnC,EAAA6B,OAAKR,WAAae,GAUdpC,EAAAA,KAAAA,aAEAA,YAAM6B,EAeFQ,UAAW,sBAbfX,cAAMY,EACF7B,SAAAA,GAba,SAAA8B,GAAA,GAAA9B,IAAA8B,EAAnBC,MAAA,YAAAD,EAAAC,KAAAC,OACDlB,EAAAgB,EAAAC,UAec,CAbTxB,IAAAA,EAAqBZ,EAAcsC,MAAzCC,IAAAC,SAAAL,EAAAG,MAAAC,IAAAE,eACMnB,EAAAA,SAqBEW,qBAAAA,EACAX,oBAAAA,eAMX","file":"cc-util.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\ndefine(\n  [\n    'lib-js', \n    'jquery', \n    'Magento_Ui/js/modal/alert'\n  ], \n  function(EBANX, $, alert) {\n    'use strict';\n\n    const formatDueDate = expiry => {\n        const dueDateSplited = expiry.replace(/ /g, '').split('/');\n        const dueDate = dueDateSplited[0] + '/20' + dueDateSplited[1];\n        return dueDate;\n    }\n\n    const showAlertMessage = (errorMessage, title) => {\n        alert({\n        title: title,\n        content: errorMessage,\n        actions: {\n            always: function() {}\n        }\n        });\n    }\n\n    const disableBtnPlaceOrder = () => {\n        $('#btn_cc_br_form_place_order').attr('disabled', 'disabled');\n    }\n\n    const enableBtnPlaceOrder = () => {\n        $('#btn_cc_br_form_place_order').removeAttr('disabled');\n    }\n\n    const validateForm = (form) => {\n        return $(form).validation() && $(form).validation('isValid');\n    }\n\n    const tokenize = ({ number, expiry, cvv }, country) => {\n        disableBtnPlaceOrder();\n\n        if (!validateForm('#card-form')) {\n          enableBtnPlaceOrder();\n          return new Promise((resolve, reject) => resolve(false));\n        }\n\n        const card_number = number.replace(/ /g, '');\n        const card_due_date = formatDueDate(expiry);\n        const card_cvv = cvv.replace(/ /g, '');\n\n        return new Promise((resolve, reject) => {\n            EBANX.config.setMode(window.checkoutConfig.payment.ebanx.mode);\n            EBANX.config.setPublishableKey(window.checkoutConfig.payment.ebanx.publicKey);\n            EBANX.config.setCountry(country);\n\n            const createTokenCallback = ebanxResponse => {\n                enableBtnPlaceOrder();\n                if (ebanxResponse.data && ebanxResponse.data.status === 'SUCCESS') {\n                    resolve(ebanxResponse.data);\n                } else {\n                    const errorMessage = ebanxResponse.error.err.message || ebanxResponse.error.err.status_message;\n                    reject(errorMessage);\n                }\n            };\n\n            EBANX.card.createToken(\n                {\n                card_number: card_number,\n                card_name: 'Magento Credit Card',\n                card_due_date: card_due_date,\n                card_cvv: card_cvv\n                },\n                createTokenCallback\n            );\n        });\n    }\n\n    return {\n        formatDueDate: formatDueDate,\n        showAlertMessage: showAlertMessage,\n        tokenize: tokenize,\n        disableBtnPlaceOrder: disableBtnPlaceOrder,\n        enableBtnPlaceOrder: enableBtnPlaceOrder,\n    };\n});\n\n},{}]},{},[1])"]}